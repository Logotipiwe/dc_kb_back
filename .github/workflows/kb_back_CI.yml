name: KB back CI
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  buildAndPush:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: Logotipiwe/dc_vars
          token: ${{secrets.PAT}}
      - name: load-env
        uses: duskmoon314/action-load-env@v1.1.0
      - uses: actions/checkout@v3
      - name: RUN
        run: |
          echo ${DOCKER_USER}
          echo ${DOCKER_PAT}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USER }}
          password: ${{ env.DOCKER_PAT }}
      - name: Build_n_push
        id: build_push
        run: |
          export KB_BACK_TAG=${{ env.DOCKER_USER }}/kb_back

          docker build . -t ${KB_BACK_TAG}
          docker push --all-tags ${KB_BACK_TAG}
          echo Time tag ${KB_BACK_TAG_TIME}
          echo "KB_BACK_TAG=${KB_BACK_TAG}" >> "$GITHUB_OUTPUT"
    outputs:
      KB_BACK_TAG: ${{ steps.build_push.outputs.KB_BACK_TAG }}
  Upload:
    runs-on: ubuntu-latest
    needs: ["buildAndPush"]
    steps:
      - uses: actions/checkout@v3
        with:
          repository: Logotipiwe/dc_vars
          token: ${{secrets.PAT}}
      - name: load-env
        uses: duskmoon314/action-load-env@v1.1.0
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3

      - name: Upload
        uses: garygrossgarten/github-action-scp@release
        with:
          local: .
          concurrency: 10
          remote: /kuber/kb_back
          host: ${{ env.DC_HOST }}
          username: ${{ env.SSH_USER }}
          password: ${{ env.SSH_PASSWORD }}
  deploy:
    runs-on: ubuntu-latest
    needs: ["Upload", "buildAndPush"]
    steps:
      - uses: actions/checkout@v3
        with:
          repository: Logotipiwe/dc_vars
          token: ${{secrets.PAT}}
      - name: load-env
        uses: duskmoon314/action-load-env@v1.1.0
      - name: Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ env.DC_HOST }}
          username: ${{ env.SSH_USER }}
          password: ${{ env.SSH_PASSWORD }}
          port: 22
          script: |
            export KB_BACK_TAG=${{ needs.buildAndPush.outputs.KB_BACK_TAG }}
            export DB_HOST=ms
            export DB_LOGIN=root
            export DB_PASS=${{ env.MYSQL_ROOT_PASSWORD }}
            docker-compose -f /kuber/kb_back/kb_back.yml down --remove-orphans
            docker-compose -f /kuber/kb_back/kb_back.yml up -d
